# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

PortGroup           cmake 1.1
PortGroup           github 1.0

# tag_prefix will be changed to v starting with version 4.0.1
github.setup        coin3d coin 4.0.0 Coin-
github.tarball_from releases
name                Coin

categories          graphics devel
platforms           darwin
revision            0
maintainers         nomaintainer
license             BSD
description         cross platform C++ OpenGL scene graph library
conflicts           Coin-framework

long_description    Coin is a high-level 3D graphics library with a \
                    C++ Application Programming Interface. Coin uses scene-graph data \
                    structures to render real-time graphics suitable for mostly all \
                    kinds of scientific and engineering visualization applications.

homepage            https://coin3d.github.io

distname            coin-${version}-src
distfiles           coin-${version}-src${extract.suffix}

checksums           rmd160  29466d5cb52cf3d2cbff500d01891c9513c794c3 \
                    sha256  e4f4bd57804b8ed0e017424ad2e45c112912a928b83f86c89963df9015251476 \
                    size    6824162

configure.args-append   -DUSE_EXTERNAL_EXPAT=ON \
                        -DHAVE_MULTIPLE_VERSION=ON

depends_lib-append  port:boost \
                    port:bzip2 \
                    port:expat \
                    port:fontconfig \
                    port:freetype \
                    port:simage \
                    port:zlib

if {${name} eq ${subport}} {
    variant manpages description {Include API documentation in manpages.} {
        depends_build-append    port:doxygen
        configure.args-append   -DCOIN_BUILD_DOCUMENTATION=ON \
                                -DCOIN_BUILD_MAN_DOCUMENTATION=ON
    }
}

subport Coin-framework {
    conflicts   Coin
    revision    0
    
    configure.args-append   -DCOIN_BUILD_MAC_FRAMEWORK=ON \
                            -DCMAKE_INSTALL_PREFIX=${frameworks_dir}
}

github.livecheck.regex  {([0-9.]+)}
